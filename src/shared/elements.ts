import { Element } from './IElement';
// import axios from 'axios';

// axios.get(`https://jsoncontent.com/api`)
//     .then(res => {
//         console.log(res.data);
//     })

export const elements: Element[] = [{"type":"header","data":{"text":"This is a demo post","level":1}},{"type":"paragraph","data":{"text":"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima nulla nesciunt dolor aliquid repudiandae repellendus. Dolore eveniet, quisquam eius. Necessitatibus hic ut magni ea accusantium earum temporibus consectetur quas corporis asperiores aliquid esse dolorem molestiae repellat voluptatibus placeat quo nostrum, aspernatur commodi iure dolorum quos quam. Dolore odit corporis aperiam, exercitationem recusandae sit facilis veritatis unde ab quae, perferendis voluptatem, cupiditate quas deleniti aut temporibus sequi esse, fuga cumque commodi rerum nobis earum sint. Molestias qui enim harum animi numquam ullam aspernatur quia accusamus, impedit iure excepturi culpa aliquam veritatis unde, reiciendis repellat assumenda. Provident doloribus assumenda, sequi quidem repudiandae."}},{"type":"quote","data":{"text":"Be the change that you wish to see in the world.","caption":"Mahatma Gandhi","alignment":"left"}},{"type":"image","data":{"url":"https://picsum.photos/800/500","caption":"Picsum Photo","withBorder":false,"withBackground":false,"stretched":false}},{"type":"paragraph","data":{"text":"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima nulla nesciunt dolor aliquid repudiandae repellendus. Dolore eveniet, quisquam eius. Necessitatibus hic ut magni ea accusantium earum temporibus consectetur quas corporis asperiores aliquid esse dolorem molestiae repellat voluptatibus placeat quo nostrum, aspernatur commodi iure dolorum quos quam. Dolore odit corporis aperiam, exercitationem recusandae sit facilis veritatis unde ab quae, perferendis voluptatem, cupiditate quas deleniti aut temporibus sequi esse, fuga cumque commodi rerum nobis earum sint. Molestias qui enim harum animi numquam ullam aspernatur quia accusamus, impedit iure excepturi culpa aliquam veritatis unde, reiciendis repellat assumenda. Provident doloribus assumenda, sequi quidem repudiandae."}},{"type":"embed","data":{"service":"youtube","source":"https://www.youtube.com/watch?v=n0JTta67aUE","embed":"https://www.youtube.com/embed/n0JTta67aUE","width":580,"height":320,"caption":"Spitting Image Official Trailer | There's Something Funny About These People"}},{"type":"header","data":{"text":"This is a Heading 2","level":2}},{"type":"paragraph","data":{"text":"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima nulla nesciunt dolor aliquid repudiandae repellendus. Dolore eveniet, quisquam eius. Necessitatibus hic ut magni ea accusantium earum temporibus consectetur quas corporis asperiores aliquid esse dolorem molestiae repellat voluptatibus placeat quo nostrum, aspernatur commodi iure dolorum quos quam. Dolore odit corporis aperiam, exercitationem recusandae sit facilis veritatis unde ab quae, perferendis voluptatem, cupiditate quas deleniti aut temporibus sequi esse, fuga cumque commodi rerum nobis earum sint. Molestias qui enim harum animi numquam ullam aspernatur quia accusamus, impedit iure excepturi culpa aliquam veritatis unde, reiciendis repellat assumenda. Provident doloribus assumenda, sequi quidem repudiandae."}},{"type":"delimiter","data":{}},{"type":"code","data":{"code":"function array_group_by(array $arr, $key) : array {\n    if (!is_string($key) && !is_int($key) && !is_float($key) && !is_callable($key)) {\n        trigger_error('array_group_by(): The key should be a string, an integer, a float, or a function', E_USER_ERROR);\n    }\n    $isFunction = !is_string($key) && is_callable($key);\n    // Load the new array, splitting by the target key\n    $grouped = [];\n    foreach ($arr as $value) {\n        $groupKey = null;\n        if ($isFunction) {\n            $groupKey = $key($value);\n        } else if (is_object($value)) {\n            $groupKey = $value->{$key};\n        } else {\n            $groupKey = $value[$key];\n        }\n        $grouped[$groupKey][] = $value;\n    }\n    // Recursively build a nested grouping if more parameters are supplied\n    // Each grouped array value is grouped according to the next sequential key\n    if (func_num_args() > 2) {\n        $args = func_get_args();\n        foreach ($grouped as $groupKey => $value) {\n            $params = array_merge([$value], array_slice($args, 2, func_num_args()));\n            $grouped[$groupKey] = call_user_func_array('array_group_by', $params);\n        }\n    }\n    return $grouped;\n}"}},{"type":"table","data":{"content":[["Heading 1","Heading 2"],["Sales 100","Sales 200"],["Sales 300","Sales 400"],["Sales 500","Sales 600"]]}}];